{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{352:function(t,a,r){\"use strict\";r.r(a);var s=r(42),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[r(\"h2\",{attrs:{id:\"特点\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#特点\"}},[t._v(\"#\")]),t._v(\" 特点：\")]),t._v(\" \"),r(\"p\",[t._v(\"类似于一个全局变量（容器），页面不刷新信息能够存储，页面刷新信息就回归初始值了（一般应用于单页面应用）。\")]),t._v(\" \"),r(\"p\",[t._v(\"单页面应用在第一次加载之后跳转时不再刷新页面。\")]),t._v(\" \"),r(\"h2\",{attrs:{id:\"应用场景\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#应用场景\"}},[t._v(\"#\")]),t._v(\" 应用场景：\")]),t._v(\" \"),r(\"ol\",[r(\"li\",[t._v(\"实现组件之间的信息通信。\")]),t._v(\" \"),r(\"li\",[t._v(\"存储一些数据（把一些数据做缓存，比如登录态信息）。\"),r(\"br\"),t._v(\"\\n为什么不使用本地存储呢？因为：\\n\"),r(\"ul\",[r(\"li\",[t._v(\"（1）本地存储是明文存储，不安全；\")]),t._v(\" \"),r(\"li\",[t._v(\"（2）本地存储是永久保存，登录态类信息希望在页面刷新的时候发请求去服务器验证登录状态，而不是永久保存。\")])])])]),t._v(\" \"),r(\"p\",[t._v(\"把从服务器获取的一些不经常更新的数据（但是需要刷新页面时重新获取。如果刷新页面也不需要重新获取[指定过期时间]本地存储即可），存储到公共状态里，这样路由组件切换没必要每一次都从服务器获取了，这样可以提高性能\\n1.\")])])}),[],!1,null,null,null);a.default=e.exports}}]);","extractedComments":[]}